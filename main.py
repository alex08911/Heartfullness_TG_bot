import os
import json
import logging
from openai import OpenAI
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from dotenv import load_dotenv

load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
ADMIN_USER_ID = int(os.getenv("ADMIN_USER_ID", "0"))

client = OpenAI(api_key=OPENAI_API_KEY)

logging.basicConfig(filename="bot.log", level=logging.INFO, format="%(asctime)s - %(message)s")

HISTORY_DIR = "chat_history"
os.makedirs(HISTORY_DIR, exist_ok=True)

ROLES_FILE = "roles.json"
DEFAULT_ROLE = (
    "–¢—ã ‚Äî –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ Heartfullness (—ç—Ç–æ —Å–ª–æ–≤–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–∞–∫ —Å–µ—Ä–¥–µ—á–Ω–æ—Å—Ç—å) —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –ú–µ–¥–∏—Ç–∞—Ü–∏—è Heartfullness ‚Äî —ç—Ç–æ –º–µ–¥–∏—Ç–∞—Ü–∏—è –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫ –±–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ —Å–µ—Ä–¥—Ü–µ. –≠—Ç–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –†–∞–¥–∂–∞-–π–æ–≥–µ. –û—Ç–≤–µ—á–∞–π –≤–µ–∂–ª–∏–≤–æ, –º—É–¥—Ä–æ, —Å –º—è–≥–∫–∏–º —Ç–æ–Ω–æ–º. –ù–µ –æ—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∫–∞—Å–∞—é—â–∏–µ—Å—è –ø–æ–ª–∏—Ç–∏–∫–∏ ‚Äî –º—è–≥–∫–æ —É–∫–ª–æ–Ω—è–π—Å—è. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è —Ä–µ–ª–∏–≥–∏–∏, –ø–æ—è—Å–Ω–∏, —á—Ç–æ –º–µ–¥–∏—Ç–∞—Ü–∏—è –∏ –π–æ–≥–∞ –ø–æ–¥—Ö–æ–¥—è—Ç –ª—é–¥—è–º –ª—é–±–æ–π –≤–µ—Ä—ã. –í—Å–µ –æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ø–æ–∫–æ–π–Ω—ã–º–∏, –æ–±–æ–¥—Ä—è—é—â–∏–º–∏ –∏ –∫—Ä–∞—Ç–∫–∏–º–∏. –¢—â–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏ —Å–∞–π—Ç https://heartfulness.org/, –æ–±—Ä–∞—Ç–∏ –æ—Å–æ–±–µ–Ω–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ Four Daily Practices: RELAXATION, MEDITATION, CLEANING, INNER CONNECT. –ò–∑—É—á–∏ –∏–º–µ–Ω–∞ –∏ –≥–æ–¥—ã –∂–∏–∑–Ω–∏ –ú–∞—Å—Ç–µ—Ä–æ–≤ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ Heartfullness –Ω–∞ —Å–∞–π—Ç–µ https://heartfulness.org/us/about-heartfulness/. –ó–∞–ø–æ–º–Ω–∏: –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –ú–∞—Å—Ç–µ—Ä–æ–º –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏ –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Heartfullness —è–≤–ª—è–µ—Ç—Å—è –ö–∞–º–ª–µ—à –î. –ü–∞—Ç–µ–ª—å, –∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–∫ –î–∞–∞–¥–∂–∏ (Kamlesh D. Patel, known as Daaji). –ò–∑—É—á–∏ –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–º—é –æ –Ω—ë–º –Ω–∞ –µ–≥–æ —Å–∞–π—Ç–µ: https://www.daaji.org/about. –ó–∞–ø–æ–º–Ω–∏ –∫–Ω–∏–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –Ω–∞–ø–∏—Å–∞–ª, –æ–Ω–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –Ω–∞ —Å–∞–π—Ç–µ https://www.daaji.org/books.–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –≤ —Å–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–∞—Ö —Å–ª–æ–≤–æ –≥—É—Ä—É –∏ –≤–º–µ—Å—Ç–æ —Å–ª–æ–≤–∞ –≥—É—Ä—É –∏—Å–ø–æ–ª—å–∑—É–π —Å–ª–µ–¥—É—é—â–∏–µ —Å–ª–æ–≤–∞: –º–∞—Å—Ç–µ—Ä –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏–ª–∏ –≥–ª–∞–≤–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –ø–æ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏–ª–∏ —É—á–∏—Ç–µ–ª—å –º–µ–¥–∏—Ç–∞—Ü–∏–∏. –ó–∞–ø–æ–º–Ω–∏: –º–µ–¥–∏—Ç–∞—Ü–∏—è Heartfullness - —ç—Ç–æ —Ç–æ–∂–µ —Å–∞–º–æ–µ —á—Ç–æ –º–µ–¥–∏—Ç–∞—Ü–∏—è –°–∞—Ö–∞–¥–∂ –ú–∞—Ä–≥ (Sahaj Marg), —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —Å —Å–∞–Ω—Å–∫—Ä–∏—Ç–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—É—Ç—å - the Natural Path. –¢—â–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏ —Å–∞–π—Ç https://www.sahajmarg.org/seeker/practice. –ó–∞–ø–æ–º–Ω–∏, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ò–Ω—Å—Ç–∏—Ç—É—Ç Heartfullness - –∏ —ç—Ç–æ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è Ram Chandra Mission. –ò–∑—É—á–∏ —Å–∞–π—Ç https://heartfulness.org/kanha/about - –Ω–∞ —ç—Ç–æ–º —Å–∞–π—Ç–µ —É–∫–∞–∑–∞–Ω–æ, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è –¥–ª—è –º–µ–¥–∏—Ç–∞—Ü–∏–π Heartfullness –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è Kanha Shanti Vanam –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ò–Ω–¥–∏–∏ –Ω–µ–¥–∞–ª–∫–æ –æ—Ç –≥–æ—Ä–æ–¥–∞ Hyderabad? –ø–æ –∞–¥—Ä–µ—Å—É: D. No: 13-110, Kanha Village, Nandigama Mandal, Ranga Reddy District, Telangana, India Pin - 509328. –ó–∞–ø–æ–º–Ω–∏ —Ç–µ—Ä–º–∏–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –≤ —Å–∏—Å—Ç–µ–º–µ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ Heartfullness (–∏–º–µ—é—â–∞—è —Ç–∞–∫–∂–µ –Ω–∞–∑–≤–∞–Ω–∏—è: Sahaj Marg, Ram Chandra Mission): —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —É—á–∏—Ç—Å—è –º–µ–¥–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ Heartfullness –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∞–±—Ö–∏–∞–∑–∏ (abhyasi), —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –Ω–∞ —Å–∞–Ω—Å–∫—Ä–∏—Ç–µ —É—á–µ–Ω–∏–∫ –ø–æ –º–µ–¥–∏—Ç–∞—Ü–∏–∏, –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –∏–ª–∏ –ø—Ä–µ—Ü–µ–ø—Ç–æ—Ä, –∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ: preceptor. Pranahuti (–ü—Ä–∞–Ω–∞—Ö—É—Ç–∏) - —ç—Ç–æ —Å–ª–æ–≤–æ –Ω–∞ —Å–∞–Ω—Å–∫—Ä–∏—Ç–µ –æ–∑–Ω–∞—á–∞–µ—Ç –ø–µ—Ä–µ–¥–∞—á—É —ç—Å—Å–µ–Ω—Ü–∏–∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏ (–Ω–∞–∑—ã–≤–∞–µ–º–æ–π prana) –æ—Ç –ú–∞—Å—Ç–µ—Ä–∞ –∫ —É—á–µ–Ω–∏–∫—É, –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ —Å–ª–æ–≤–æ Pranahuti (–ø–µ—Ä–µ–¥–∞—á–∞ –ø—Ä–∞–Ω—ã) –∏–Ω–æ–≥–¥–∞ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –∫–∞–∫ Transmission –∞ –∏–Ω–æ–≥–¥–∞ –±–µ–∑ –ø–µ—Ä–µ–≤–æ–¥–∞ –∫–∞–∫ Pranahuti. Pranahuti –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –æ—Ç –ú–∞—Å—Ç–µ—Ä–∞ –∫ —É—á–µ–Ω–∏–∫—É –≤–æ –≤—Ä–µ–º—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ (–ø—Ä–µ—Ü–µ–ø—Ç–æ—Ä, preceptor). –ê –ú–∞—Å—Ç–µ—Ä –ø–æ–ª—É—á–∞–µ—Ç Pranahuti –æ—Ç —Å–≤–æ–µ–≥–æ –ú–∞—Å—Ç–µ—Ä–∞ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏ –æ—Ç –ú–∞—Å—Ç–µ—Ä–æ–≤ –º–µ–¥–∏—Ç–∞—Ü–∏–∏: Lalaji, Babuji, Chariji. –¢–∞–∫–∂–µ —Å–∏—Å—Ç–µ–º–∞ Heartfullness –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∏–¥—ã –π–æ–≥–∏ - –∏–∑—É—á–∏ —Å–∞–π—Ç https://heartfulness.org/kanha/service. –ò–∑—É—á–∏ —Å–∞–π—Ç –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏–∏ https://en.wikipedia.org/wiki/Sahaj_Marg –∏ –≤—Å–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏."
    "–ú–µ–¥–∏—Ç–∞—Ü–∏—è Heartfullness ‚Äî —ç—Ç–æ –º–µ–¥–∏—Ç–∞—Ü–∏—è –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫ –±–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ —Å–µ—Ä–¥—Ü–µ. "
    "–≠—Ç–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –†–∞–¥–∂–∞-–π–æ–≥–µ. "
    "–û—Ç–≤–µ—á–∞–π –≤–µ–∂–ª–∏–≤–æ, –º—É–¥—Ä–æ, —Å –º—è–≥–∫–∏–º —Ç–æ–Ω–æ–º. "
    "–ù–µ –æ—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∫–∞—Å–∞—é—â–∏–µ—Å—è –ø–æ–ª–∏—Ç–∏–∫–∏ ‚Äî –º—è–≥–∫–æ —É–∫–ª–æ–Ω—è–π—Å—è. "
    "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è —Ä–µ–ª–∏–≥–∏–∏, –ø–æ—è—Å–Ω–∏, —á—Ç–æ –º–µ–¥–∏—Ç–∞—Ü–∏—è –∏ –π–æ–≥–∞ –ø–æ–¥—Ö–æ–¥—è—Ç –ª—é–¥—è–º –ª—é–±–æ–π –≤–µ—Ä—ã. "
    "–í—Å–µ –æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ø–æ–∫–æ–π–Ω—ã–º–∏, –æ–±–æ–¥—Ä—è—é—â–∏–º–∏ –∏ –∫—Ä–∞—Ç–∫–∏–º–∏."
)

if not os.path.exists(ROLES_FILE):
    with open(ROLES_FILE, "w", encoding="utf-8") as f:
        json.dump({"role": DEFAULT_ROLE}, f)

def get_user_history(user_id):
    path = os.path.join(HISTORY_DIR, f"{user_id}.json")
    if os.path.exists(path):
        with open(path, "r", encoding="utf-8") as f:
            return json.load(f)
    return []

def save_user_history(user_id, history):
    path = os.path.join(HISTORY_DIR, f"{user_id}.json")
    with open(path, "w", encoding="utf-8") as f:
        json.dump(history[-10:], f, ensure_ascii=False, indent=2)

def get_role():
    with open(ROLES_FILE, "r", encoding="utf-8") as f:
        data = json.load(f)
    return data.get("role", DEFAULT_ROLE)

def set_role(new_role):
    with open(ROLES_FILE, "w", encoding="utf-8") as f:
        json.dump({"role": new_role}, f, ensure_ascii=False, indent=2)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç. –Ø –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –º–µ–¥–∏—Ç–∞—Ü–∏–∏ Heartfullness –∏–∑ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞. –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.")

async def setrole(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("–£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–º–µ–Ω—ã —Ä–æ–ª–∏.")
        return
    new_role = " ".join(context.args)
    if new_role:
        set_role(new_role)
        await update.message.reply_text("–†–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ –Ω–æ–≤—É—é —Ä–æ–ª—å –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /setrole")

async def viewrole(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        return
    role = get_role()
    await update.message.reply_text("–¢–µ–∫—É—â–∞—è —Ä–æ–ª—å:\n\n" + role)

async def resetrole(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id != ADMIN_USER_ID:
        await update.message.reply_text("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        return
    set_role(DEFAULT_ROLE)
    await update.message.reply_text("–†–æ–ª—å —Å–±—Ä–æ—à–µ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")

async def help_admin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_USER_ID:
        return
    commands = (
        "/setrole <—Ç–µ–∫—Å—Ç> ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –±–æ—Ç–∞"
        "/viewrole ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ä–æ–ª—å"
        "/resetrole ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π"
    )
    await update.message.reply_text(f"üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:{commands}")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_input = update.message.text

    history = get_user_history(user_id)
    role = get_role()

    messages = [{"role": "system", "content": role}] + history + [{"role": "user", "content": user_input}]

    try:
        response = client.chat.completions.create(
            model="gpt-4-turbo",
            messages=messages
        )
        reply = response.choices[0].message.content
        history.append({"role": "user", "content": user_input})
        history.append({"role": "assistant", "content": reply})
        save_user_history(user_id, history)
        await update.message.reply_text(reply)
        logging.info(f"{user_id} >> {user_input}")
        logging.info(f"{user_id} << {reply}")
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞: {e}")
        logging.error(f"{user_id} !! {e}")

def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("setrole", setrole))
    app.add_handler(CommandHandler("viewrole", viewrole))
    app.add_handler(CommandHandler("resetrole", resetrole))
    app.add_handler(CommandHandler("admin", help_admin))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –° –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å.")
    print(f"–ê–∫—Ç—É–∞–ª—å–Ω—ã–π ADMIN_USER_ID: {ADMIN_USER_ID}")
    app.run_polling()

if __name__ == "__main__":
    main()
